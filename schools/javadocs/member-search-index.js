memberSearchIndex = [{
    "p": "com.lambdaschool.schools.controllers",
    "c": "CourseController",
    "l": "addCourse(Course)",
    "url": "addCourse(com.lambdaschool.schools.models.Course)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "CoursesService",
    "l": "addStudCourses(long, long)",
    "url": "addStudCourses(long,long)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "CoursesServiceImpl",
    "l": "addStudCourses(long, long)",
    "url": "addStudCourses(long,long)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Course",
    "l": "addStudent(Student)",
    "url": "addStudent(com.lambdaschool.schools.models.Student)"
}, {
    "p": "com.lambdaschool.schools.controllers",
    "c": "StudentController",
    "l": "addStudentUser(Student)",
    "url": "addStudentUser(com.lambdaschool.schools.models.Student)"
}, {
    "p": "com.lambdaschool.schools.config",
    "c": "Swagger2Config",
    "l": "api()"
}, {
    "p": "com.lambdaschool.schools.repositories",
    "c": "CourseRepository",
    "l": "checkStudentCourseCombo(long, long)",
    "url": "checkStudentCourseCombo(long,long)"
}, {
    "p": "com.lambdaschool.schools",
    "c": "SchoolsApplicationTests",
    "l": "contextLoads()"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Course",
    "l": "Course()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.schools.controllers",
    "c": "CourseController",
    "l": "CourseController()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "CoursesServiceImpl",
    "l": "CoursesServiceImpl()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "CoursesService",
    "l": "delete(long)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "CoursesServiceImpl",
    "l": "delete(long)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "StudentService",
    "l": "delete(long)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "StudentServiceImpl",
    "l": "delete(long)"
}, {
    "p": "com.lambdaschool.schools.controllers",
    "c": "CourseController",
    "l": "deleteCourseById(long)"
}, {
    "p": "com.lambdaschool.schools.controllers",
    "c": "StudentController",
    "l": "deleteStudentById(long)"
}, {
    "p": "com.lambdaschool.schools.repositories",
    "c": "CourseRepository",
    "l": "deleteStudentCourse(long, long)",
    "url": "deleteStudentCourse(long,long)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "CoursesService",
    "l": "deleteStudentCourse(long, long)",
    "url": "deleteStudentCourse(long,long)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "CoursesServiceImpl",
    "l": "deleteStudentCourse(long, long)",
    "url": "deleteStudentCourse(long,long)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "StudCourses",
    "l": "equals(Object)",
    "url": "equals(java.lang.Object)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "CoursesService",
    "l": "findAll()"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "CoursesServiceImpl",
    "l": "findAll()"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "StudentService",
    "l": "findAll()"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "StudentServiceImpl",
    "l": "findAll()"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "CoursesService",
    "l": "findCourseById(long)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "CoursesServiceImpl",
    "l": "findCourseById(long)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "StudentService",
    "l": "findStudentById(long)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "StudentServiceImpl",
    "l": "findStudentById(long)"
}, {
    "p": "com.lambdaschool.schools.views",
    "c": "JustTheCount",
    "l": "getCount()"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "StudCourses",
    "l": "getCourse()"
}, {
    "p": "com.lambdaschool.schools.controllers",
    "c": "CourseController",
    "l": "getCourseById(Long)",
    "url": "getCourseById(java.lang.Long)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Course",
    "l": "getCourseid()"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Course",
    "l": "getCoursename()"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Instructor",
    "l": "getCourses()"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Student",
    "l": "getCourses()"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Course",
    "l": "getInstructor()"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Instructor",
    "l": "getInstructorid()"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Instructor",
    "l": "getName()"
}, {"p": "com.lambdaschool.schools.models", "c": "Student", "l": "getName()"}, {
    "p": "com.lambdaschool.schools.models",
    "c": "StudCourses",
    "l": "getStudent()"
}, {
    "p": "com.lambdaschool.schools.controllers",
    "c": "StudentController",
    "l": "getStudentById(Long)",
    "url": "getStudentById(java.lang.Long)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Student",
    "l": "getStudentid()"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Course",
    "l": "getStudents()"
}, {
    "p": "com.lambdaschool.schools.config",
    "c": "H2ServerConfiguration",
    "l": "H2ServerConfiguration()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.schools.config",
    "c": "H2ServerConfiguration",
    "l": "h2TcpServer()"
}, {
    "p": "com.lambdaschool.schools.config",
    "c": "H2ServerConfiguration",
    "l": "h2WebServer()"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "StudCourses",
    "l": "hashCode()"
}, {
    "p": "com.lambdaschool.schools.repositories",
    "c": "CourseRepository",
    "l": "insertStudCourses(String, long, long)",
    "url": "insertStudCourses(java.lang.String,long,long)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Instructor",
    "l": "Instructor()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Instructor",
    "l": "Instructor(String)",
    "url": "%3Cinit%3E(java.lang.String)"
}, {
    "p": "com.lambdaschool.schools.controllers",
    "c": "CourseController",
    "l": "listAllCourses()"
}, {
    "p": "com.lambdaschool.schools.controllers",
    "c": "StudentController",
    "l": "listAllStudents()"
}, {
    "p": "com.lambdaschool.schools",
    "c": "SchoolsApplication",
    "l": "main(String[])",
    "url": "main(java.lang.String[])"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "CoursesService",
    "l": "save(Course)",
    "url": "save(com.lambdaschool.schools.models.Course)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "CoursesServiceImpl",
    "l": "save(Course)",
    "url": "save(com.lambdaschool.schools.models.Course)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "StudentService",
    "l": "save(Student)",
    "url": "save(com.lambdaschool.schools.models.Student)"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "StudentServiceImpl",
    "l": "save(Student)",
    "url": "save(com.lambdaschool.schools.models.Student)"
}, {
    "p": "com.lambdaschool.schools",
    "c": "SchoolsApplication",
    "l": "SchoolsApplication()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.schools",
    "c": "SchoolsApplicationTests",
    "l": "SchoolsApplicationTests()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "StudCourses",
    "l": "setCourse(Course)",
    "url": "setCourse(com.lambdaschool.schools.models.Course)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Course",
    "l": "setCourseid(long)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Course",
    "l": "setCoursename(String)",
    "url": "setCoursename(java.lang.String)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Instructor",
    "l": "setCourses(List<Course>)",
    "url": "setCourses(java.util.List)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Student",
    "l": "setCourses(List<StudCourses>)",
    "url": "setCourses(java.util.List)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Course",
    "l": "setInstructor(Instructor)",
    "url": "setInstructor(com.lambdaschool.schools.models.Instructor)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Instructor",
    "l": "setInstructorid(long)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Instructor",
    "l": "setName(String)",
    "url": "setName(java.lang.String)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Student",
    "l": "setName(String)",
    "url": "setName(java.lang.String)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "StudCourses",
    "l": "setStudent(Student)",
    "url": "setStudent(com.lambdaschool.schools.models.Student)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Student",
    "l": "setStudentid(long)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Course",
    "l": "setStudents(List<StudCourses>)",
    "url": "setStudents(java.util.List)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "StudCourses",
    "l": "StudCourses()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "StudCourses",
    "l": "StudCourses(Course, Student)",
    "url": "%3Cinit%3E(com.lambdaschool.schools.models.Course,com.lambdaschool.schools.models.Student)"
}, {
    "p": "com.lambdaschool.schools.models",
    "c": "Student",
    "l": "Student()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.schools.controllers",
    "c": "StudentController",
    "l": "StudentController()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.schools.services",
    "c": "StudentServiceImpl",
    "l": "StudentServiceImpl()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.schools.config",
    "c": "Swagger2Config",
    "l": "Swagger2Config()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.schools.controllers",
    "c": "CourseController",
    "l": "updateFullCourse(Course, long)",
    "url": "updateFullCourse(com.lambdaschool.schools.models.Course,long)"
}, {
    "p": "com.lambdaschool.schools.controllers",
    "c": "StudentController",
    "l": "updateFullstudent(Student, long)",
    "url": "updateFullstudent(com.lambdaschool.schools.models.Student,long)"
}]